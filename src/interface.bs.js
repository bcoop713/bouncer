// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var Validators$Bouncer = require("./validators.bs.js");

function list(validator) {
  return (function (param, param$1) {
      return Validators$Bouncer.list(validator, param, param$1);
    });
}

function tuple(validator) {
  return (function (param, param$1) {
      return Validators$Bouncer.tuple(validator, param, param$1);
    });
}

function record(validator) {
  return (function (param, param$1) {
      return Validators$Bouncer.record(validator, param, param$1);
    });
}

var maxStringLength = Validators$Bouncer.maxStringLength;

var minStringLength = Validators$Bouncer.minStringLength;

function any(validators) {
  return (function (param, param$1) {
      return Validators$Bouncer.any(validators, param, param$1);
    });
}

function all(validators) {
  return (function (param, param$1) {
      return Validators$Bouncer.all(validators, param, param$1);
    });
}

var optional = Validators$Bouncer.optional;

function custom(customV) {
  return (function (param, param$1) {
      return Validators$Bouncer.custom(customV, param, param$1);
    });
}

function number(value) {
  return (function (param) {
      return Validators$Bouncer.number(value, param);
    });
}

function string(value) {
  return (function (param) {
      return Validators$Bouncer.string(value, param);
    });
}

function _undefined(value) {
  return (function (param) {
      return Validators$Bouncer._undefined(value, param);
    });
}

function _null(value) {
  return (function (param) {
      return Validators$Bouncer._null(value, param);
    });
}

function not(validator) {
  return (function (param, param$1) {
      return Validators$Bouncer.vNot(validator, param, param$1);
    });
}

function exists(value) {
  return (function (param) {
      return Validators$Bouncer.exists(value, param);
    });
}

exports.list = list;
exports.tuple = tuple;
exports.record = record;
exports.maxStringLength = maxStringLength;
exports.minStringLength = minStringLength;
exports.any = any;
exports.all = all;
exports.optional = optional;
exports.custom = custom;
exports.number = number;
exports.string = string;
exports._undefined = _undefined;
exports._null = _null;
exports.not = not;
exports.exists = exists;
/* Validators-Bouncer Not a pure module */
